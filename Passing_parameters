// Pass by value  : any changes in formal parameters does not afftect the actual paramter 

//call by address: Here the address of actual parameters are passed to formal parameter and formal parameters must be pointers.Any changes done inside function will modify the actual parameters 

#include <iostream>
using namespace std;
// void swap(int*x,int*y)
// {int temp;
// temp=*x;
// *x=*y;
// *y=temp;
// }
// int main(){
//     int num1=10,num2=15;
//     swap(&num1,&num2);
//     cout<<num1<<endl;
//     cout<<num2<<endl;
//     return 0;


//call by reference (only in c++): To make a function as call by reference we just need to add & in the parameters, these are the references 
void swap(int &x, int &y)
{
    int temp;
    temp=x;
    x=y;
    y=temp;
    
}
int main(){
    int num1=10,num2=15;
    swap(num1,num2);
    cout<<num1<<endl;
    cout<<num2;
    return 0;
}
